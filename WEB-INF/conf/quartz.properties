#當程式中有多個scheduler時，用來區別不同scheduler
org.quartz.scheduler.instanceName = MyScheduler
#同一時間能夠並行執行的job個數，規定是只要正的整數值，但一般是限定在1~100
org.quartz.threadPool.threadCount = 5
#設定儲存scheduling資訊(job,triggers,calendars)的位置，這邊就如一般設定儲存在記憶體中
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
# ----------------------------- Plugins --------------------------- #
#Quartz並沒有內建的logging實作，所以務必指定幫我們執行log的class
org.quartz.plugin.triggerHistory.class=org.quartz.plugins.history.LoggingTriggerHistoryPlugin
#Trigger在fire(發起)job執行時，要顯示的log資訊內容及格式 -->
org.quartz.plugin.triggerHistory.triggerFiredMessage=Trigger [{1}.{0}] fired job [{6}.{5}] scheduled at: {2, date, dd-MM-yyyy HH:mm:ss.SSS}, next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}
#Trigger在job完成執行時，要顯示的log資訊內容及格式 -->
org.quartz.plugin.triggerHistory.triggerCompleteMessage=Trigger {1}.{0} completed firing job {6}.{5} at {4, date, yyyy-MM-dd HH:mm:ss.SSS} with resulting trigger instruction code: {9}. Next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}  
#Trigger在fire(發起)job執行卻misFire時，要顯示的log資訊內容及格式 -->
org.quartz.plugin.triggerHistory.triggerMisfiredMessage=Trigger {1}.{0} misfired job {6}.{5} at: {4, date, yyyy/MM/dd HH:mm:ss }. Should have fired at: {3, date,yyyy/MM/dd HH:mm:ss} 
#此plugin 會從預設檔名為quartz_data.xml的設定檔讀取jobs和triggers設定並加至scheduler中
org.quartz.plugin.jobInitializer.class=org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin
org.quartz.plugin.jobInitializer.fileNames = quartz_data.xml